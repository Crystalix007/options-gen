// Code generated by options-gen. DO NOT EDIT.
package cli

import (
	"fmt"
	"net/http"

	"github.com/kazhuravlev/options-gen/validator"
)

type optOptionsMeta struct {
	setter    func(o *Options)
	validator func(o *Options) error
}

func _Options_httpClientValidator(o *Options) error {
	if validator.IsNil(o.httpClient) {
		return fmt.Errorf("%w: httpClient must be set (type *http.Client)", ErrInvalidOption)
	}
	return nil
}

func _Options_tokenValidator(o *Options) error {

	return nil
}

func NewOptions(
	httpClient *http.Client,
	token string,

	options ...optOptionsMeta,
) Options {
	o := Options{}
	o.httpClient = httpClient
	o.token = token

	for i := range options {
		options[i].setter(&o)
	}

	return o
}

func (o *Options) Validate() error {
	if err := _Options_httpClientValidator(o); err != nil {
		return fmt.Errorf("%w: invalid value for option WithHttpClient", err)
	}

	if err := _Options_tokenValidator(o); err != nil {
		return fmt.Errorf("%w: invalid value for option WithToken", err)
	}

	return nil
}
