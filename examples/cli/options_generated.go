// Code generated by options-gen. DO NOT EDIT.
package cli

import (
	"fmt"
	"net/http"

	goplvalidator "github.com/go-playground/validator/v10"
	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
)

var _validator461e464ebed9 = goplvalidator.New()

type optOptionsMeta struct {
	setter    func(o *Options)
	validator func(o *Options) error
}

func NewOptions(
	httpClient *http.Client,
	token string,

	options ...optOptionsMeta,
) Options {
	o := Options{}
	o.httpClient = httpClient
	o.token = token

	for i := range options {
		options[i].setter(&o)
	}

	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)

	errs.Add(errors461e464ebed9.NewValidationError("HttpClient", _Options_httpClientValidator(o)))
	errs.Add(errors461e464ebed9.NewValidationError("Token", _Options_tokenValidator(o)))
	return errs.AsError()
}

func _Options_httpClientValidator(o *Options) error {
	if err := _validator461e464ebed9.Var(o.httpClient, "required"); err != nil {
		return fmt.Errorf("field `httpClient` did not pass the test: %w", err)
	}
	return nil
}

func _Options_tokenValidator(o *Options) error {
	return nil
}
