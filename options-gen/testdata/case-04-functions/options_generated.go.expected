// Code generated by options-gen. DO NOT EDIT.
package testcase

import (
	"net/http"
)

type optOptionsSetter func(o *Options)

func NewOptions(
	FnTypeParam FnType,
	FnParam func(server *http.Server) error,
	HandlerFunc http.HandlerFunc,
	Middleware func(next http.HandlerFunc) http.HandlerFunc,
	Local localFnType,
	options ...optOptionsSetter,
) Options {
	o := Options{}
	o.FnTypeParam = FnTypeParam
	o.FnParam = FnParam
	o.HandlerFunc = HandlerFunc
	o.Middleware = Middleware
	o.Local = Local

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithOptFnTypeParam(opt FnType) optOptionsSetter {
	return func(o *Options) {
		o.OptFnTypeParam = opt
	}
}

func WithOptFnParam(opt func(server *http.Server) error) optOptionsSetter {
	return func(o *Options) {
		o.OptFnParam = opt
	}
}

func WithOptHandlerFunc(opt http.HandlerFunc) optOptionsSetter {
	return func(o *Options) {
		o.OptHandlerFunc = opt
	}
}

func WithOptMiddleware(opt func(next http.HandlerFunc) http.HandlerFunc) optOptionsSetter {
	return func(o *Options) {
		o.OptMiddleware = opt
	}
}

func WithOptLocal(opt localFnType) optOptionsSetter {
	return func(o *Options) {
		o.OptLocal = opt
	}
}

func (o *Options) Validate() error {
	return nil
}
