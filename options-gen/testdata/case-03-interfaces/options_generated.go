// Code generated by options-gen. DO NOT EDIT.
package testcase

import (
	"fmt"
	"io"

	"github.com/pkg/errors"
	"golang.org/x/sync/errgroup"
)

type optOptionsMeta struct {
	setter    func(o *Options)
	validator func(o *Options) error
}

func NewOptions(
	Any any,
	Stringer fmt.Stringer,
	RWCloser io.ReadWriteCloser,
	Local localInterface,

	options ...optOptionsMeta,
) Options {
	o := Options{}
	o.Any = Any
	o.Stringer = Stringer
	o.RWCloser = RWCloser
	o.Local = Local

	for i := range options {
		options[i].setter(&o)
	}

	return o
}

func WithOptAny(opt any) optOptionsMeta {
	return optOptionsMeta{
		setter:    func(o *Options) { o.OptAny = opt },
		validator: _Options_OptAnyValidator,
	}
}

func WithOptStringer(opt fmt.Stringer) optOptionsMeta {
	return optOptionsMeta{
		setter:    func(o *Options) { o.OptStringer = opt },
		validator: _Options_OptStringerValidator,
	}
}

func WithOptRWCloser(opt io.ReadWriteCloser) optOptionsMeta {
	return optOptionsMeta{
		setter:    func(o *Options) { o.OptRWCloser = opt },
		validator: _Options_OptRWCloserValidator,
	}
}

func WithOptLocal(opt localInterface) optOptionsMeta {
	return optOptionsMeta{
		setter:    func(o *Options) { o.OptLocal = opt },
		validator: _Options_OptLocalValidator,
	}
}

func (o *Options) Validate() error {
	g := new(errgroup.Group)

	g.Go(func() error {
		err := _Options_AnyValidator(o)

		return errors.Wrap(err, "invalid value for option WithAny")
	})
	g.Go(func() error {
		err := _Options_StringerValidator(o)

		return errors.Wrap(err, "invalid value for option WithStringer")
	})
	g.Go(func() error {
		err := _Options_RWCloserValidator(o)

		return errors.Wrap(err, "invalid value for option WithRWCloser")
	})
	g.Go(func() error {
		err := _Options_LocalValidator(o)

		return errors.Wrap(err, "invalid value for option WithLocal")
	})
	g.Go(func() error {
		err := _Options_OptAnyValidator(o)

		return errors.Wrap(err, "invalid value for option WithOptAny")
	})
	g.Go(func() error {
		err := _Options_OptStringerValidator(o)

		return errors.Wrap(err, "invalid value for option WithOptStringer")
	})
	g.Go(func() error {
		err := _Options_OptRWCloserValidator(o)

		return errors.Wrap(err, "invalid value for option WithOptRWCloser")
	})
	g.Go(func() error {
		err := _Options_OptLocalValidator(o)

		return errors.Wrap(err, "invalid value for option WithOptLocal")
	})
	return g.Wait()
}

func _Options_AnyValidator(o *Options) error {

	return nil
}

func _Options_StringerValidator(o *Options) error {

	return nil
}

func _Options_RWCloserValidator(o *Options) error {

	return nil
}

func _Options_LocalValidator(o *Options) error {

	return nil
}

func _Options_OptAnyValidator(o *Options) error {

	return nil
}

func _Options_OptStringerValidator(o *Options) error {

	return nil
}

func _Options_OptRWCloserValidator(o *Options) error {

	return nil
}

func _Options_OptLocalValidator(o *Options) error {

	return nil
}
